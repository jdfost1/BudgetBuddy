/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.34
 * Generated at: 2018-10-09 17:19:50 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class compoundInterest_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<html>\r\n");
      out.write("           <!-- Latest compiled and minified CSS -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\">\r\n");
      out.write("\r\n");
      out.write("<!-- jQuery library -->\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<!-- Latest compiled JavaScript -->\r\n");
      out.write("<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>\r\n");
      out.write("    <script>\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    function calculate(){\r\n");
      out.write("    var balance = document.getElementById(\"balance\").value;\r\n");
      out.write("    var rate = document.getElementById(\"rate\").value;\r\n");
      out.write("    rate = rate/100;\r\n");
      out.write("    var i;\r\n");
      out.write("    var years = document.getElementById(\"years\").value;\r\n");
      out.write("    \r\n");
      out.write("    for(i=0;i < years;i++){\r\n");
      out.write("    balance = parseFloat(balance) + parseFloat(rate*balance);\r\n");
      out.write("    }\r\n");
      out.write("    document.getElementById(\"results\").innerHTML = \"Resulting balance after \"+ years+\" years : $\"+balance.toFixed(2);\r\n");
      out.write("    }//end of calculate function\r\n");
      out.write("    </script>\r\n");
      out.write("    <style>\r\n");
      out.write("    body{\r\n");
      out.write("        background-color:black;\r\n");
      out.write("        color:white;\r\n");
      out.write("        font-size:30px;\r\n");
      out.write("    }\r\n");
      out.write("    button{\r\n");
      out.write(" width:25%;\r\n");
      out.write("    height:40px;\r\n");
      out.write("    font-size:20px;\r\n");
      out.write("    font-weight: bold;\r\n");
      out.write("    background-color:green;\r\n");
      out.write("    }\r\n");
      out.write("    input{\r\n");
      out.write("        color:black;\r\n");
      out.write("    }\r\n");
      out.write("    h1{\r\n");
      out.write("        background-color:green;\r\n");
      out.write("    }\r\n");
      out.write("    .slider {\r\n");
      out.write("    -webkit-appearance: none;  /* Override default CSS styles */\r\n");
      out.write("    appearance: none;\r\n");
      out.write("    width: 2px; /* Full-width */\r\n");
      out.write("    height: 5px; /* Specified height */\r\n");
      out.write("    background: white; /* Grey background */\r\n");
      out.write("    outline: none; /* Remove outline */\r\n");
      out.write("    opacity: 0.7; /* Set transparency (for mouse-over effects on hover) */\r\n");
      out.write("    -webkit-transition: .2s; /* 0.2 seconds transition on hover */\r\n");
      out.write("    transition: opacity .2s;\r\n");
      out.write("}\r\n");
      out.write(".slidecontainer {\r\n");
      out.write("    width: 55%; /* Width of the outside container */\r\n");
      out.write("}\r\n");
      out.write("    #logo{\r\n");
      out.write("        background-color:black;\r\n");
      out.write("    }\r\n");
      out.write("    #results{\r\n");
      out.write("        color:lime;\r\n");
      out.write("    }\r\n");
      out.write("    #compoundvideo{\r\n");
      out.write("        background-color:green;\r\n");
      out.write("    }\r\n");
      out.write("    </style>\r\n");
      out.write("    \r\n");
      out.write("    <body>\r\n");
      out.write("         <nav class=\"navbar navbar-inverse\">\r\n");
      out.write("  <div class=\"container-fluid\">\r\n");
      out.write("    <div class=\"navbar-header\">\r\n");
      out.write("      <a class=\"navbar-brand\" href=\"welcome.html\">BudgetBuddy.com</a>\r\n");
      out.write("    </div>\r\n");
      out.write("    <ul class=\"nav navbar-nav\">\r\n");
      out.write("      \r\n");
      out.write("      \r\n");
      out.write("      <li class=\"dropdown\">\r\n");
      out.write("          <a class=\"dropdown-toggle\" data-toggle=\"dropdown\" href=\"#\">Budget Tools\r\n");
      out.write("          <span class=\"caret\"></span></a>\r\n");
      out.write("          <ul class=\"dropdown-menu\">\r\n");
      out.write("              <li><a href=\"quickBudget.html\">Quick Budget</a></li>\r\n");
      out.write("              <li><a href=\"401k.html\">401k Calculator</a></li>\r\n");
      out.write("              <li><a href=\"compoundInterest.html\">Compound Interest Calculator</a></li>\r\n");
      out.write("              </ul></li>\r\n");
      out.write("      \r\n");
      out.write("              \r\n");
      out.write("                <li class=\"active\">\r\n");
      out.write("          <a  href=\"login.html\">Login\r\n");
      out.write("         </a>\r\n");
      out.write("          </li>\r\n");
      out.write("               <li class=\"active\">\r\n");
      out.write("          <a  href=\"signUp.html\">Sign Up\r\n");
      out.write("         </a>\r\n");
      out.write("          </li>\r\n");
      out.write("    </ul>\r\n");
      out.write("  </div>\r\n");
      out.write("</nav>\r\n");
      out.write("     \r\n");
      out.write("\r\n");
      out.write("        <h1>Compound Interest Calculator</h1>\r\n");
      out.write("    <label>Select a starting balance</label><br>\r\n");
      out.write("        <div class=\"slidecontainer\">\r\n");
      out.write("  <input type=\"range\" min=\"0\" max=\"100000\" value=\"1000\" step=\"100\" class=\"slider\" id=\"balance\">\r\n");
      out.write("  <p>Balance: $ <span id=\"balanceOutput\"></span></p>\r\n");
      out.write("</div><br>\r\n");
      out.write("<script>\r\n");
      out.write("var slider1 = document.getElementById(\"balance\");\r\n");
      out.write("var output1 = document.getElementById(\"balanceOutput\");\r\n");
      out.write("output1.innerHTML = slider1.value;\r\n");
      out.write("\r\n");
      out.write("slider1.oninput = function() {\r\n");
      out.write("  output1.innerHTML = this.value;\r\n");
      out.write("}\r\n");
      out.write("</script><br>\r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("    <label>Select the annual rate of return </label><br>\r\n");
      out.write("        <div class=\"slidecontainer\">\r\n");
      out.write("  <input type=\"range\" min=\"1\" max=\"15\" value=\"5\" step=\".5\" class=\"slider\" id=\"rate\">\r\n");
      out.write("  <p>Rate of Return: <span id=\"sliderOutput\"></span>%</p>\r\n");
      out.write("</div><br>\r\n");
      out.write("<script>\r\n");
      out.write("var slider = document.getElementById(\"rate\");\r\n");
      out.write("var output = document.getElementById(\"sliderOutput\");\r\n");
      out.write("output.innerHTML = slider.value;\r\n");
      out.write("\r\n");
      out.write("slider.oninput = function() {\r\n");
      out.write("  output.innerHTML = this.value;\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("        \r\n");
      out.write("    <label>Enter the number of years to calculate your investment</label><br>\r\n");
      out.write("               <div class=\"slidecontainer\">\r\n");
      out.write("  <input type=\"range\" min=\"1\" max=\"100\" value=\"25\" step=\"1\" class=\"slider\" id=\"years\">\r\n");
      out.write("  <p>Years to calculate:  <span id=\"yearsOutput\"></span></p>\r\n");
      out.write("</div><br>\r\n");
      out.write("<script>\r\n");
      out.write("var slider2 = document.getElementById(\"years\");\r\n");
      out.write("var output2 = document.getElementById(\"yearsOutput\");\r\n");
      out.write("output2.innerHTML = slider2.value;\r\n");
      out.write("\r\n");
      out.write("slider2.oninput = function() {\r\n");
      out.write("  output2.innerHTML = this.value;\r\n");
      out.write("}\r\n");
      out.write("</script><br><br>\r\n");
      out.write("<div id=\"results\">\r\n");
      out.write("            </div>\r\n");
      out.write("        <button onclick=\"calculate()\">Calculate Investment</button><br>\r\n");
      out.write("        \r\n");
      out.write("       \r\n");
      out.write("    </body>\r\n");
      out.write("    </html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
